# .github/workflows/docker-publish.yml

name: Docker Build and Push to GHCR

# Controls when the workflow will run
on:
  push:
    branches: [ "main" ] # Triggers the workflow on push events but only for the main branch
    # Optionally, trigger on tag pushes as well:
    # tags:
    #   - 'v*.*.*' # Triggers on version tags like v1.0.0
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  # Define the image name based on your GitHub repository path
  # Example: ghcr.io/your-username/your-repo-name
  # GitHub Actions automatically converts the repository owner name to lowercase.
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }} # Format: username/repo-name

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest # Use the latest Ubuntu runner
    # Set permissions for the GITHUB_TOKEN to allow pushing to GHCR
    permissions:
      contents: read # Needed to check out the repository
      packages: write # Needed to push packages (Docker images) to GHCR

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 # Checks out your repository under $GITHUB_WORKSPACE

      # Add this step to set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }} # The GitHub username or organization name initiating the workflow
          password: ${{ secrets.GITHUB_TOKEN }} # Use the automatically generated token

      - name: Extract metadata (tags, labels) for Docker
        # This action helps generate tags based on git events (like SHA, branch, tag)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          # Define tagging strategy:
          # - type=sha: Creates a tag like sha-abcdef1
          # - type=ref,event=branch: Creates a tag like 'main' for the main branch
          # - type=ref,event=tag: Creates a tag like 'v1.0.0' if you push a tag
          # - type=raw,value=latest,enable={{is_default_branch}}: Creates 'latest' tag only on the default branch (usually main)
          tags: |
            type=sha,prefix=sha-
            type=ref,event=branch
            type=ref,event=tag
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: . # Use the Dockerfile from the root of the repository
          push: true # Actually push the image after building
          tags: ${{ steps.meta.outputs.tags }} # Use the tags generated by the metadata action
          labels: ${{ steps.meta.outputs.labels }} # Add labels generated by the metadata action
          # Cache settings should now work with Buildx setup
          cache-from: type=gha
          cache-to: type=gha,mode=max
